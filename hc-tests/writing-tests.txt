== Overview ==

The test writing infrastructure is designed to make it really simple for anyone to write a new test.

All tests are implemented in classes which extend the HealthCheckTest base class and must implement the run_test function.
The base class has utility functions to assert different results and store an message and severity on failure of the assertion.

== Severity Definitions ==

There are currently three types of severity:

= HEALTH_CHECK_OK =
This means the assertion passed ok.
Very rarely there might be a message associated with this but in most cases there wouldn't be.

= HEALTH_CHECK_RECOMMENDATION = 
This means that the assertion failed and the configuration being asserted is not critical to the sites functionality.
This should be used where we are making a configuration recommendation about something which could cause an issue but doesn't stop the site working completely.
These should be things that can be resolved over a period of time.

= HEALTH_CHECK_ERROR =
This means that the assertion failed and there is immedidate action required to fix an issue that will be breaking the site.

== Examples ==

The php-configuration tests show the framework in its simplest usage.
The dummy tests should not be used as a basis for developing tests as they access the results object directly and this is discouraged.

== Tests to be written ==

Check for lack of favicon.ico - http://core.trac.wordpress.org/ticket/3426
Check that XML-RPC access is not blocked by host - Joseph Scott in IRC
Check db collation matches configured charset - Andrew Ozz - http://westi.wordpress.com/2009/12/26/giving-your-wordpress-a-check-up/#comment-13673
Check for data before xml prolog - Andrew - http://westi.wordpress.com/2009/12/26/giving-your-wordpress-a-check-up/#comment-13666